diff --git a/BACpypes.ini b/BACpypes.ini
index 4a94621..3fe09b6 100644
--- a/BACpypes.ini
+++ b/BACpypes.ini
@@ -1,8 +1,7 @@
 [BACpypes]
 objectName: BopTestProxy
-address: 10.0.2.7/24
+address: 10.0.0.7/24
 objectIdentifier: 599
 maxApduLengthAccepted: 1024
 segmentationSupported: segmentedBoth
 vendorIdentifier: 15
-
diff --git a/BopTestProxy.py b/BopTestProxy.py
index 24a4fdd..1eefa81 100644
--- a/BopTestProxy.py
+++ b/BopTestProxy.py
@@ -57,7 +57,8 @@ activation_signal = {}
 nextState = None
 g = None
 
-baseurl = "http://localhost:5000"
+baseurl = "http://boptest:5000"
+#baseurl = "http://simulated-digital-twin-bacnet-shim-1:5000"
 boptest_measurements = None
 boptest_inputs = None
 
@@ -190,7 +191,7 @@ def update_boptest_data():
     #print("Advancing with signals: " + str(signals))
     response = requests.post(
     #    "http://localhost:5000/advance", data={"oveAct_u": next_oveAct_u, "oveAct_activate": next_oveAct_activate}
-        "http://localhost:5000/advance", data=signals
+        "http://boptest:5000/advance", data=signals
     )
     if response.status_code != 200:
         print("Error response: %r" % (response.status_code,))
@@ -210,7 +211,7 @@ def update_boptest_data():
     # because if say the call to /advance takes 3 seconds, we want to get called again in 2 seconds, not in 5 seconds. 
     global nextState
     if nextState:
-        for k, v in nextState.items():
+        for k, v in nextState['payload'].items():
             if _debug:
                 update_boptest_data._debug("    - k, v: %r, %r", k, v)
 
@@ -268,6 +269,7 @@ def main():
         _log.debug("    - this_device: %r", this_device)
 
     # make a sample application
+    print(args.ini)
     this_application = ReadPropertyMultipleApplication(this_device, args.ini.address)
 
     # create the objects and add them to the application
